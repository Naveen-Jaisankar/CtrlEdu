version: '3.9'

services:
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Raghul_2002
      POSTGRES_DB: CtrlEdu
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672" # Management UI
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 10s
      timeout: 10s
      retries: 5

  eureka:
    build:
      context: ./EurekaService
      dockerfile: Dockerfile
    container_name: eureka
    ports:
      - "8761:8761"
    environment:
      EUREKA_INSTANCE_HOSTNAME: eureka
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD", "curl", "-f", "http://eureka:8761/eureka/"]
      interval: 10s
      timeout: 10s
      retries: 5

  gateway:
    build:
      context: ./GatewayService
      dockerfile: Dockerfile
    container_name: gateway
    ports:
      - "8084:8084"
    depends_on:
      - eureka
    environment:
      SPRING_PROFILES_ACTIVE: docker
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://eureka:8761/eureka/

  auth-service:
    build:
      context: ./AuthService
      dockerfile: Dockerfile
    container_name: auth-service
    ports:
      - "8081:8081"
    depends_on:
      - eureka
      - postgres
      - keycloak
    environment:
      SPRING_PROFILES_ACTIVE: docker
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://eureka:8761/eureka/

  notification-service:
    build:
      context: ./NotificationService
      dockerfile: Dockerfile
    container_name: notification-service
    ports:
      - "8082:8082"
    depends_on:
      - rabbitmq
      - eureka
    environment:
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: guest
      SPRING_RABBITMQ_PASSWORD: guest
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://eureka:8761/eureka/
    healthcheck:
      test: ["CMD", "curl", "-f", "http://notification-service:8082/actuator/health"]
      interval: 10s
      timeout: 10s
      retries: 5

  keycloak:
    image: quay.io/keycloak/keycloak:21.1.1
    container_name: keycloak
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "8080:8080"
    command: start-dev

volumes:
  postgres_data:
