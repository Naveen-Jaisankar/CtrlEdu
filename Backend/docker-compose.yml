version: '3.9'

services:
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Raghul_2002
      POSTGRES_DB: CtrlEdu
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672" # Management UI
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 10s
      timeout: 10s
      retries: 5

  eureka:
    build:
      context: ./EurekaService
      dockerfile: Dockerfile
    container_name: eureka
    ports:
      - "8761:8761"
    environment:
      EUREKA_INSTANCE_HOSTNAME: eureka
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD", "curl", "-f", "http://eureka:8761/eureka/"]
      interval: 10s
      timeout: 10s
      retries: 5

  gateway:
    build:
      context: ./GatewayService
      dockerfile: Dockerfile
    container_name: gateway
    ports:
      - "8084:8084"
    depends_on:
      - eureka
    environment:
      SPRING_PROFILES_ACTIVE: docker
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://eureka:8761/eureka/

  auth-service:
    build:
      context: ./AuthService
      dockerfile: Dockerfile
    container_name: auth-service
    ports:
      - "8081:8081"
      - "5005:5005"
    depends_on:
      - eureka
      - postgres
      - keycloak
    environment:
      SPRING_PROFILES_ACTIVE: docker
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://eureka:8761/eureka/
      JAVA_TOOL_OPTIONS: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005"


  notification-service:
    build:
      context: ./NotificationService
      dockerfile: Dockerfile
    container_name: notification-service
    ports:
      - "8082:8082"
      - "5006:5006"
    depends_on:
      - rabbitmq
      - eureka
    environment:
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: guest
      SPRING_RABBITMQ_PASSWORD: guest
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://eureka:8761/eureka/
    healthcheck:
      test: ["CMD", "curl", "-f", "http://notification-service:8082/actuator/health"]
      interval: 10s
      timeout: 10s
      retries: 5

  keycloak:
    image: quay.io/keycloak/keycloak:21.1.1
    container_name: keycloak
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/CtrlEdu
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: Raghul_2002
    ports:
      - "8080:8080"
    volumes:
      - keycloak_data:/opt/keycloak/data
    command: start-dev

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  redis:
    image: redis:6.2
    container_name: redis
    ports:
      - "6379:6379"

  chat-service:
    build:
      context: ./ChatService
      dockerfile: Dockerfile
    container_name: chat-service
    ports:
      - "8085:8085"
    depends_on:
      - kafka
      - redis
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379


volumes:
  postgres_data:
  keycloak_data:
    driver: local
